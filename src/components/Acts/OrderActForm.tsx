import React, { useState } from 'react';
import './OrderActForm.css'

const ActOrderForm: React.FC = () => {
    const [formData, setFormData] = useState({
        actNumber:              '',
        date:                   '',
        representative:         '',
        position:               '',
        reason:                 '',
        equipment:              '',
        apartment:              '',
        house:                  '',
        street:                 '',
        subscriber:             '',
        orderGiver:             '',
        orderReceiver:          '',
        executor:               '',
        executionDate:          '',
        executionTime:          '',
        disconnectedEquipment:  '',
        reconnectionDate:       '',
        reconnectionBy:         '',
        reconnectionOrder:      ''
    });

    const handleInputChange = (field: string, value: string) => {
        setFormData(prev => ({
            ...prev,
            [field]: value
        }));
    };

    const handlePrint = () => {
        window.print();
    };

    return (
        <div className="act-order-page">
            <div className="page-header no-print">
                <h1>–ê–ö–¢-–ù–ê–†–Ø–î –Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –≥–∞–∑–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</h1>
                <button 
                    className="print-btn"
                    onClick={handlePrint}
                >
                    üñ®Ô∏è –ü–µ—á–∞—Ç—å
                </button>
            </div>
            
            <div className="form-container">
                <div className="print-form">
                    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ */}
                    <div className="form-header">
                        <div className="company-logo">
                            <div className="logo-icon">üè¢</div>
                            <div className="company-info">
                                <h2>–°–ê–•–ê–¢–†–ê–ù–°–ù–ï–§–¢–ï–ì–ê–ó</h2>
                                <p>–£–°–î</p>
                            </div>
                        </div>
                    </div>

                    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞ */}
                    <div className="document-header">
                        <h1>
                            –ê–ö–¢-–ù–ê–†–Ø–î ‚Ññ
                            <input
                                type="text"
                                value={formData.actNumber}
                                onChange={(e) => handleInputChange('actNumber', e.target.value)}
                                placeholder="________"
                                className="inline-input"
                            />
                        </h1>
                        <h2>–ù–ê –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï –ì–ê–ó–û–ò–°–ü–û–õ–¨–ó–£–Æ–©–ï–ì–û<br/>–û–ë–û–†–£–î–û–í–ê–ù–ò–Ø –ñ–ò–õ–´–• –ó–î–ê–ù–ò–ô</h2>
                        
                        <div className="date-line">
                            ¬´<input
                                type="text"
                                value={formData.date}
                                onChange={(e) => handleInputChange('date', e.target.value)}
                                placeholder="___"
                                className="inline-input small"
                            />¬ª _________________ 20___–≥.
                        </div>
                    </div>

                    {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ */}
                    <div className="form-content">
                        <div className="content-section">
                            <p>–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—é —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ 
                                <input
                                    type="text"
                                    value={formData.representative}
                                    onChange={(e) => handleInputChange('representative', e.target.value)}
                                    placeholder="_______________________________________"
                                    className="underlined-input"
                                />
                            </p>
                            <p className="small-text">—Ñ.–∏.–æ., –¥–æ–ª–∂–Ω–æ—Å—Ç—å</p>
                        </div>

                        <div className="content-section">
                            <p>–≤–≤–∏–¥—É</p>
                            <textarea
                                value={formData.reason}
                                onChange={(e) => handleInputChange('reason', e.target.value)}
                                placeholder="—É–∫–∞–∑–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É"
                                className="underlined-textarea"
                                rows={2}
                            />
                        </div>

                        <div className="content-section">
                            <p>–ø–æ—Ä—É—á–∞–µ—Ç—Å—è –æ—Ç–∫–ª—é—á–∏—Ç—å 
                                <input
                                    type="text"
                                    value={formData.equipment}
                                    onChange={(e) => handleInputChange('equipment', e.target.value)}
                                    placeholder="–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–±–æ—Ä–æ–≤"
                                    className="underlined-input"
                                />
                            </p>
                        </div>

                        <div className="content-section">
                            <p>–≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ ‚Ññ
                                <input
                                    type="text"
                                    value={formData.apartment}
                                    onChange={(e) => handleInputChange('apartment', e.target.value)}
                                    placeholder="____"
                                    className="inline-input small"
                                /> –¥–æ–º–∞
                                <input
                                    type="text"
                                    value={formData.house}
                                    onChange={(e) => handleInputChange('house', e.target.value)}
                                    placeholder="____"
                                    className="inline-input small"
                                /> –ø–æ —É–ª.
                                <input
                                    type="text"
                                    value={formData.street}
                                    onChange={(e) => handleInputChange('street', e.target.value)}
                                    placeholder="__________________________________________"
                                    className="underlined-input"
                                />
                            </p>
                        </div>

                        <div className="content-section">
                            <p>—É –∞–±–æ–Ω–µ–Ω—Ç–∞ 
                                <input
                                    type="text"
                                    value={formData.subscriber}
                                    onChange={(e) => handleInputChange('subscriber', e.target.value)}
                                    placeholder="—Ñ.–∏.–æ."
                                    className="underlined-input"
                                />
                            </p>
                        </div>

                        <div className="two-column">
                            <div className="column">
                                <p>–ù–∞—Ä—è–¥ –≤—ã–¥–∞–ª</p>
                                <input
                                    type="text"
                                    value={formData.orderGiver}
                                    onChange={(e) => handleInputChange('orderGiver', e.target.value)}
                                    placeholder="–¥–æ–ª–∂–Ω–æ—Å—Ç—å, —Ñ.–∏.–æ., –ø–æ–¥–ø–∏—Å—å"
                                    className="underlined-input"
                                />
                            </div>
                            <div className="column">
                                <p>–ù–∞—Ä—è–¥ –ø–æ–ª—É—á–∏–ª</p>
                                <input
                                    type="text"
                                    value={formData.orderReceiver}
                                    onChange={(e) => handleInputChange('orderReceiver', e.target.value)}
                                    placeholder="–¥–æ–ª–∂–Ω–æ—Å—Ç—å, —Ñ.–∏.–æ., –ø–æ–¥–ø–∏—Å—å"
                                    className="underlined-input"
                                />
                            </div>
                        </div>

                        {/* –†–∞–∑–¥–µ–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
                        <div className="execution-section">
                            <div className="content-section">
                                <p>–ú–Ω–æ—é 
                                    <input
                                        type="text"
                                        value={formData.executor}
                                        onChange={(e) => handleInputChange('executor', e.target.value)}
                                        placeholder="–¥–æ–ª–∂–Ω–æ—Å—Ç—å, —Ñ.–∏.–æ."
                                        className="underlined-input"
                                    />
                                </p>
                            </div>
                            
                            <div className="content-section">
                                <p>¬´<input
                                    type="text"
                                    value={formData.executionDate}
                                    onChange={(e) => handleInputChange('executionDate', e.target.value)}
                                    placeholder="___"
                                    className="inline-input small"
                                />¬ª _____________ 20___–≥. –≤ 
                                <input
                                    type="text"
                                    value={formData.executionTime}
                                    onChange={(e) => handleInputChange('executionTime', e.target.value)}
                                    placeholder="__:__"
                                    className="inline-input small"
                                /> —á. ______ –º–∏–Ω.</p>
                            </div>

                            <div className="content-section">
                                <p>–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –≥–∞–∑–æ–∏—Å–ø–æ–ª—å–∑—É—é—â–µ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</p>
                                <textarea
                                    value={formData.disconnectedEquipment}
                                    onChange={(e) => handleInputChange('disconnectedEquipment', e.target.value)}
                                    placeholder="—É–∫–∞–∑–∞—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–±–æ—Ä–æ–≤, —Å–ø–æ—Å–æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏—è"
                                    className="underlined-textarea"
                                    rows={2}
                                />
                                <p className="small-text">—É–∫–∞–∑–∞—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–±–æ—Ä–æ–≤, —Å–ø–æ—Å–æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏—è</p>
                            </div>

                            <div className="content-section">
                                <p>–≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ ‚Ññ______ –¥–æ–º–∞ _______ –ø–æ —É–ª. ____________________________________________</p>
                            </div>
                        </div>

                        {/* –ü–æ–¥–ø–∏—Å–∏ */}
                        <div className="signatures-section">
                            <p><strong>–ü–æ–¥–ø–∏—Å–∏:</strong></p>
                            <p>–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ ________________________</p>
                            <p>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–≤–∞—Ä—Ç–∏—Ä–æ—Å—ä—ë–º—â–∏–∫ (–∞–±–æ–Ω–µ–Ω—Ç) __________________________</p>
                        </div>

                        {/* –†–∞–∑–¥–µ–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
                        <div className="reconnection-section">
                            <div className="content-section">
                                <p>–ì–∞–∑–æ–∏—Å–ø–æ–ª—å–∑—É—é—â–µ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ ¬´
                                    <input
                                        type="text"
                                        value={formData.reconnectionDate}
                                        onChange={(e) => handleInputChange('reconnectionDate', e.target.value)}
                                        placeholder="___"
                                        className="inline-input small"
                                    />¬ª______________20___–≥.</p>
                            </div>
                            
                            <div className="content-section">
                                <p>–ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–º —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ 
                                    <input
                                        type="text"
                                        value={formData.reconnectionBy}
                                        onChange={(e) => handleInputChange('reconnectionBy', e.target.value)}
                                        placeholder="–¥–æ–ª–∂–Ω–æ—Å—Ç—å, —Ñ.–∏.–æ."
                                        className="underlined-input"
                                    />
                                </p>
                            </div>

                            <div className="content-section">
                                <p>–ø–æ —É–∫–∞–∑–∞–Ω–∏—é 
                                    <input
                                        type="text"
                                        value={formData.reconnectionOrder}
                                        onChange={(e) => handleInputChange('reconnectionOrder', e.target.value)}
                                        placeholder="–¥–æ–ª–∂–Ω–æ—Å—Ç—å, —Ñ.–∏.–æ."
                                        className="underlined-input"
                                    />
                                </p>
                            </div>

                            <div className="content-section">
                                <p>–≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ ‚Ññ________ –¥–æ–º–∞________ –ø–æ —É–ª.__________________________________________</p>
                                <p>—É –∞–±–æ–Ω–µ–Ω—Ç–∞ ______________________________________________________________________</p>
                                <p className="small-text">—Ñ.–∏.–æ.</p>
                            </div>

                            <div className="signatures-section">
                                <p><strong>–ü–æ–¥–ø–∏—Å–∏:</strong></p>
                                <p>–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ ________________________</p>
                                <p>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–≤–∞—Ä—Ç–∏—Ä–æ—Å—ä—ë–º—â–∏–∫ (–∞–±–æ–Ω–µ–Ω—Ç) ___________________________</p>
                            </div>
                        </div>

                        {/* –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ */}
                        <div className="note-section">
                            <p><strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> –ê–∫—Ç-–Ω–∞—Ä—è–¥ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤ –¥–≤—É—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–∞—Ö, –æ–¥–∏–Ω –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã–¥–∞—ë—Ç—Å—è –Ω–∞ —Ä—É–∫–∏ –∞–±–æ–Ω–µ–Ω—Ç—É, –¥—Ä—É–≥–æ–π —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.</p>
                        </div>
                    </div>

                    {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—á–∞—Ç–∏ */}
                    <div className="print-button-section no-print">
                        <button 
                            className="print-button"
                            onClick={handlePrint}
                        >
                            üñ®Ô∏è –ü–µ—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞
                        </button>
                    </div>
                </div>
            </div>

        </div>
    );
};

export default ActOrderForm;